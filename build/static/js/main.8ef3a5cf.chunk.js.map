{"version":3,"sources":["component/utils/index.js","component/Navbar/index.js","component/Home/index.js","component/SignUp/index.js","component/Login/index.js","component/ForgetPassword/ResetPassword.js","component/ForgetPassword/index.js","component/PostedJob/JobItem.js","component/PostedJob/ApplicationModal.js","component/utils/Pagination.js","component/PostedJob/index.js","PrivateRoute.js","component/PostedJob/PostNewJob.js","App.js","reportWebVitals.js","index.js"],"names":["TOKEN_KEY","BASE_URL","isLogin","localStorage","getItem","AUTH_TOKEN","Navbar","isLoggedIn","setLoginFalse","history","useHistory","className","to","style","textDecoration","onClick","removeItem","push","index","src","alt","name","map","item","Schema","Yup","shape","required","email","nullable","password","confirmPassword","SignUp","props","handleSubmit","value","setState","passwordError","data","userRole","Number","state","axios","post","then","res","setItem","setToken","token","toast","success","setLoginTrue","catch","err","error","alignSelf","marginBottom","htmlFor","this","e","target","initialValues","skills","validationSchema","onSubmit","values","errors","touched","handleChange","handleBlur","placeholder","type","onBlur","onChange","Component","withRouter","PostedJob","func","response","message","console","log","login","ResetPassword","ForgetPassword","useState","isReset","setIsReset","handleTokenVerification","get","Fragment","params","a","JobItem","job","handleApplicationClick","title","description","location","id","Applications","word","charAt","toUpperCase","slice","toLowerCase","ApplicationModal","appId","close","applications","setApplications","useEffect","headers","length","Pagination","jobPerPage","totalJobs","paginate","currentPage","pageNumbers","i","Math","ceil","number","PostJob","jobList","setJobList","openModal","setOpenModal","setAppId","loader","setLoader","setCurrentPage","indexOfLastJob","indexOfFirstJob","currentJobs","fontSize","pageNumber","PrivateRoute","component","rest","render","PostNewJob","App","setIsLoggedIn","configure","position","POSITION","BOTTOM_RIGHT","hideProgressBar","autoClose","path","exact","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ef3a5cf.chunk.js","sourcesContent":["import axios from \"axios\"\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst TOKEN_KEY = 'jwt';\r\nexport const BASE_URL=\"https://jobs-api.squareboat.info/api/v1/\"\r\n\r\nexport const login = (values, func) => {\r\n\tconst data = values\r\n\taxios.post(BASE_URL + \"/auth/login\", data)\r\n\t.then((res)=>{\r\n        toast.success(\"Login successfully\")\r\n\t\tlocalStorage.setItem(TOKEN_KEY, res.data.data.token);\r\n\t\tfunc()\r\n\t})\r\n    .catch((err) => {\r\n        toast.error(err.response.data.message)\r\n        console.log(err.response)\r\n    })\r\n}\r\n\r\nexport const setToken = (data) => {\r\n    localStorage.setItem(TOKEN_KEY, data);\r\n}\r\nexport const logout = () => {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n}\r\n\r\nexport const isLogin = () => {\r\n    if (localStorage.getItem(TOKEN_KEY)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport const AUTH_TOKEN = () => {\r\n    if (localStorage.getItem(TOKEN_KEY)) {\r\n        return localStorage.getItem(TOKEN_KEY);\r\n    }\r\n    return false;\r\n}","import React from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport \"./index.scss\"\r\nimport { logout} from \"../utils\"\r\n\r\nexport default function Navbar({\r\n\tisLoggedIn,\r\n\tsetLoginFalse\r\n}) {\r\n\tconst history = useHistory()\r\n\treturn (\r\n\t\t<div className=\"navbar-container\">\r\n\t\t\t<div className=\"navbar-sub-container\">\r\n\t\t\t\t\t<Link to=\"/\" style={{textDecoration: \"none\"}}>\r\n\t\t\t\t\t\t<h1 className=\"navbar-logo\">My<span>Job</span></h1>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<div className=\"nav-right-link\">\r\n\t\t\t\t\t\t{isLoggedIn && \r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t<Link className=\"nav-post-job\" to=\"/post-new-job\">\r\n\t\t\t\t\t\t\t\tPost a Job\r\n\t\t\t\t\t\t\t</Link>)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{isLoggedIn ? \r\n\t\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tlogout()\r\n\t\t\t\t\t\t\t\t\tsetLoginFalse()\r\n\t\t\t\t\t\t\t\t\thistory.push(\"/\")\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"navbar-login-btn\">\r\n\t\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t\t</button> :\r\n\t\t\t\t\t\t\t<Link to=\"/sign-up\">\r\n\t\t\t\t\t\t\t\t<button className=\"navbar-login-btn\">\r\n\t\t\t\t\t\t\t\t\tLogin/Signup\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr />\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { isLogin } from '../utils'\r\nimport \"./index.scss\"\r\nexport default function index() {\r\n\tconst trustedCompanies = [\r\n\t\t{\r\n\t\t\tname: \"Goldcar\",\r\n\t\t\tsrc: \"/Goldcar.svg\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Gocanvas\",\r\n\t\t\tsrc: \"/Gocanvas.svg\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Netflix\",\r\n\t\t\tsrc: \"/Netflix.png\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Tokopedia\",\r\n\t\t\tsrc: \"/Tokopedia.png\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Zoom\",\r\n\t\t\tsrc: \"/Zoom.png\",\r\n\t\t},\r\n\t]\r\n\treturn (\r\n\t\t<div className=\"home-container\">\r\n\t\t\t<div className=\"home-container-1\">\r\n\t\t\t\t<h1 className=\"home-container-1-heading\">Welcome to <span>My<span>Jobs</span></span></h1>\r\n\t\t\t\t<Link to={isLogin() ? \"/posted-job\" : \"/sign-up\"} className=\"home-container-1-btn\">Get Started</Link>\r\n\t\t\t</div>\r\n\t\t\t<img src=\"/images/Home-Header.jpeg\" className=\"home-header\" alt=\"My Job\" />\r\n\t\t\t<div className=\"home-container-2\">\r\n\t\t\t\t<h2>Why us</h2>\r\n\t\t\t\t<div className=\"home-container-2-feature\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2>Get more visibility</h2>\r\n\t\t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2>Organize your candidates</h2>\r\n\t\t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2>Verify their abilities</h2>\r\n\t\t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"trusted-companies\">\r\n\t\t\t\t\t<h2>Companies Who Trust Us</h2>\r\n\t\t\t\t\t<div className=\"trusted-companies-grid\">\r\n\t\t\t\t\t\t{trustedCompanies.map((item) => \r\n\t\t\t\t\t\t\t<img className=\"trusted-companies-img\" src={`images/Trusted-Companies${item.src}`} alt={item.name} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport \"./index.scss\"\r\nimport axios from 'axios';\r\nimport {BASE_URL, setToken} from \"../utils\"\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nconst Schema = Yup.object().shape({\r\n    name: Yup.string()\r\n        .required(\"The field is mandatory.\"),\r\n    email: Yup.string()        \r\n       .email('Invalid email address.')\r\n       .required(\"The field is mandatory.\").nullable(),\r\n\tpassword: Yup.string()\r\n     .required(\"The field is mandatory.\"),\r\n\tconfirmPassword: Yup.string()\r\n     .required(\"The field is mandatory.\"),\r\n});\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\t\tthis.state= {\r\n\t\t\tuserRole: \"0\",\r\n\t\t\tpasswordError: false,\r\n\t\t}\r\n    }\r\n\r\n\thandleSubmit = (value) =>{\r\n\t\tif(value.password !== value.confirmPassword){\r\n\t\t\tthis.setState({\r\n\t\t\t\tpasswordError: true\r\n\t\t\t})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconst data = {\r\n\t\t\t\t...value,\r\n\t\t\t\tuserRole: Number(this.state.userRole)\r\n\t\t\t}\r\n\t\t\tthis.setState({\r\n\t\t\t\tpasswordError: false\r\n\t\t\t})\r\n\t\t\taxios.post(BASE_URL + \"/auth/register\", data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetToken(res.data.data.token)\r\n\t\t\t\ttoast.success(\"Accout created successfully\")\r\n\t\t\t\tthis.props.setLoginTrue()\r\n\t\t\t\tthis.props.history.push('/posted-job')\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\ttoast.error(\"Something went wrong\")\r\n\t\t\t})\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sign-up\">\r\n\t\t\t\t<div className=\"sign-up-container\">\r\n\t\t\t\t\t<h1>SignUp</h1>\r\n\t\t\t\t\t<label style={{alignSelf: 'flex-start', marginBottom: \"5px\"}} htmlFor=\"position\">I’m a*</label>\r\n\t\t\t\t\t<div className=\"input-btn-container\">\r\n\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\tclassName={\"signup-position\" + (this.state.userRole === \"0\" ? \" signup-position-selected\" : \"\")} \r\n\t\t\t\t\t\t\tvalue=\"0\" \r\n\t\t\t\t\t\t\tonClick={(e)=> this.setState({userRole: e.target.value})}>\r\n\t\t\t\t\t\t\tRecruiter\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\tclassName={\"signup-position\" + (this.state.userRole === \"1\" ? \" signup-position-selected\" : \"\")} \r\n\t\t\t\t\t\t\tvalue=\"1\"\r\n\t\t\t\t\t\t\tonClick={(e)=> this.setState({userRole: e.target.value})}>\r\n\t\t\t\t\t\t\tCandidate\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Formik \r\n\t\t\t\t\t\tinitialValues={{\r\n\t\t\t\t\t\t\tname: \"\",\r\n\t\t\t\t\t\t\temail: \"\",\r\n\t\t\t\t\t\t\tpassword: \"\",\r\n\t\t\t\t\t\t\tconfirmPassword: \"\",\r\n\t\t\t\t\t\t\tskills: \"\"\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvalidationSchema={Schema}\r\n\t\t\t\t\t\tonSubmit = {this.handleSubmit}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t{({ values, errors, touched, handleChange, handleBlur }) => (\r\n\t\t\t\t\t\t<Form className=\"signup-form\">\r\n\t\t\t\t\t\t\t<div className=\"input-field-container\">\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"name\">Full name*</label>\r\n\t\t\t\t\t\t\t\t<Field \r\n\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\tclassName={\"input-field\" + (errors.name && touched.name && errors.name ? \" validationErrorInput\" : \"\")}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your full name\" \r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur} \r\n\t\t\t\t\t\t\t\t\tonChange={handleChange} \r\n\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<span className=\"validationError\">{errors.name && touched.name && errors.name}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"input-field-container\">\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"email\">Email address*</label>\r\n\t\t\t\t\t\t\t\t<Field \r\n\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\tclassName={\"input-field\" + (errors.email && touched.email && errors.email ? \" validationErrorInput\" : \"\")}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email\" \r\n\t\t\t\t\t\t\t\t\ttype=\"email\" \r\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur} \r\n\t\t\t\t\t\t\t\t\tonChange={handleChange} \r\n\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<span className=\"validationError\">{errors.email && touched.email && errors.email}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"sameLineInput\">\r\n\t\t\t\t\t\t\t\t<div className=\"input-field-container\">\r\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"password\">Create Password*</label>\r\n\t\t\t\t\t\t\t\t\t<Field \r\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\tclassName={\"input-field\" + (errors.confirmPassword && touched.confirmPassword && errors.confirmPassword ? \" validationErrorInput\" : \"\")}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\" \r\n\t\t\t\t\t\t\t\t\t\ttype=\"password\" \r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur} \r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange} \r\n\t\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<span className=\"validationError\">{errors.password && touched.password && errors.password}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"input-field-container\">\r\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"confirmPassword\">Confirm Password*</label>\r\n\t\t\t\t\t\t\t\t\t<Field \r\n\t\t\t\t\t\t\t\t\t\tname=\"confirmPassword\"\r\n\t\t\t\t\t\t\t\t\t\tclassName={\"input-field\" + (errors.confirmPassword && touched.confirmPassword && errors.confirmPassword ? \" validationErrorInput\" : \"\")}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\" \r\n\t\t\t\t\t\t\t\t\t\ttype=\"password\" \r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur} \r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange} \r\n\t\t\t\t\t\t\t\t\t\tvalue={values.confirmPassword}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<span className=\"validationError\">{((errors.confirmPassword && touched.confirmPassword && errors.confirmPassword) || this.state.passwordError) && \"Password should be same.\" }</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"input-field-container\">\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"skilles\">Skills</label>\r\n\t\t\t\t\t\t\t\t<Field \r\n\t\t\t\t\t\t\t\t\tname=\"skills\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"input-field\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter comma separated skills\" \r\n\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur} \r\n\t\t\t\t\t\t\t\t\tonChange={handleChange} \r\n\t\t\t\t\t\t\t\t\tvalue={values.skills}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<span className=\"validationError\">{errors.skills && touched.skills && errors.skills}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<button className=\"btn\" type=\"submit\">Signup</button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t</Formik>\r\n\t\t\t\t\t<p className=\"signup-already-acc\">Have an account? \r\n\t\t\t\t\t\t<Link to=\"/login\">\r\n\t\t\t\t\t\t\t<span> Login</span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(SignUp)","import React from 'react'\r\nimport \"./index.scss\"\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport {login} from \"../utils\"\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Schema = Yup.object().shape({\r\n    email: Yup.string()        \r\n       .email('Invalid email address.')\r\n       .required(\"The field is mandatory.\").nullable(),\r\n\tpassword: Yup.string()\r\n     .required(\"The field is mandatory.\"),\r\n});\r\n\r\nconst PostedJob = ({\r\n\tsetLoginTrue\r\n}) => {\r\n\tconst history = useHistory();\r\n\treturn (\r\n\t\t<div className=\"sign-up login\">\r\n\t\t\t<div className=\"sign-up-container\">\r\n\t\t\t\t<h1>Login</h1>\r\n\t\t\t\t<Formik \r\n\t\t\t\t\t\tinitialValues={{\r\n\t\t\t\t\t\t\temail: \"\",\r\n\t\t\t\t\t\t\tpassword: \"\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvalidationSchema={Schema}\r\n\t\t\t\t\t\tonSubmit={(values) => login(values, () => {\r\n\t\t\t\t\t\t\thistory.push('/posted-job')\r\n\t\t\t\t\t\t\tsetLoginTrue()\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t{({ values, errors, touched, handleChange, handleBlur }) => (\r\n\t\t\t\t\t\t<Form className=\"signup-form\">\r\n\t\t\t\t\t\t\t<div className=\"input-field-container\">\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"email\">Email address</label>\r\n\t\t\t\t\t\t\t\t<Field \r\n\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\tclassName={\"input-field\" + (errors.email && touched.email && errors.email ? \" validationErrorInput\" : \"\")}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email\" \r\n\t\t\t\t\t\t\t\t\ttype=\"email\" \r\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur} \r\n\t\t\t\t\t\t\t\t\tonChange={handleChange} \r\n\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<span className=\"validationError\">{errors.email && touched.email && errors.email}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"input-field-container\">\r\n\t\t\t\t\t\t\t\t<div className=\"password-label\">\r\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"password\">Password</label>\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/forget-password\" className=\"forget-password-link\">Forgot your password?</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Field \r\n\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\tclassName={\"input-field\" + (errors.confirmPassword && touched.confirmPassword && errors.confirmPassword ? \" validationErrorInput\" : \"\")}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\" \r\n\t\t\t\t\t\t\t\t\ttype=\"password\" \r\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur} \r\n\t\t\t\t\t\t\t\t\tonChange={handleChange} \r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<span className=\"validationError\">{errors.password && touched.password && errors.password}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<button className=\"btn\" type=\"submit\">Login</button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t</Formik>\r\n\t\t\t\t\t<p className=\"signup-already-acc\">New to MyJobs? \r\n\t\t\t\t\t\t<Link to=\"/sign-up\">\r\n\t\t\t\t\t\t\t<span> Create an account</span>\r\n\t\t\t\t\t\t</Link> \r\n\t\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PostedJob","import React from 'react'\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport axios from 'axios';\r\nimport {BASE_URL} from '../utils'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\n\r\nconst ResetPassword = ({\r\n\ttoken\r\n}) => {\r\n\tconst Schema = Yup.object().shape({\r\n\t\tpassword: Yup.string()\r\n     \t\t.required(\"The field is mandatory.\"),\r\n\t\tconfirmPassword: Yup.string()\r\n     \t\t.required(\"The field is mandatory.\"),\r\n\t});\r\n\tconst history = useHistory();\r\n\tconst handleSubmit = (values) => {\r\n\t\tconst data = {\r\n\t\t\t...values,\r\n\t\t\ttoken\r\n\t\t}\r\n\t\taxios.post(BASE_URL + \"auth/resetpassword\", data)\r\n\t\t.then((res) => {\r\n\t\t\ttoast.success(\"Password changed successfully\")\r\n\t\t\thistory.push(\"/login\");\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\ttoast.error(\"Something went wrong\")\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"sign-up forget-password\">\r\n\t\t\t<div className=\"sign-up-container\">\r\n\t\t\t\t<h1>Reset Your Password</h1>\r\n\t\t\t\t<p className=\"forget-password-detail\">Enter your new password below.</p>\r\n\t\t\t\t<Formik \r\n\t\t\t\t\t\tinitialValues={{\r\n\t\t\t\t\t\t\tpassword: \"\",\r\n\t\t\t\t\t\t\tconfirmPassword: \"\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvalidationSchema={Schema}\r\n\t\t\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t{({ values, errors, touched, handleChange, handleBlur }) => (\r\n\t\t\t\t\t\t<Form className=\"signup-form\">\r\n\t\t\t\t\t\t\t<div className=\"input-field-container\">\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"name\">New password</label>\r\n\t\t\t\t\t\t\t\t<Field \r\n\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\tclassName={\"input-field\" + (errors.password && touched.password && errors.password ? \" validationErrorInput\" : \"\")}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\" \r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur} \r\n\t\t\t\t\t\t\t\t\tonChange={handleChange} \r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<span className=\"validationError\">{errors.password && touched.password && errors.password}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"input-field-container\">\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"confirmPassword\">Confirm new password</label>\r\n\t\t\t\t\t\t\t\t<Field \r\n\t\t\t\t\t\t\t\t\tname=\"confirmPassword\"\r\n\t\t\t\t\t\t\t\t\tclassName={\"input-field\" + (errors.confirmPassword && touched.confirmPassword && errors.confirmPassword ? \" validationErrorInput\" : \"\")}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\" \r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur} \r\n\t\t\t\t\t\t\t\t\tonChange={handleChange} \r\n\t\t\t\t\t\t\t\t\tvalue={values.confirmPassword}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<span className=\"validationError\">{errors.confirmPassword && touched.confirmPassword && errors.confirmPassword}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<button className=\"btn\" type=\"submit\">Reset</button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t</Formik>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ResetPassword\r\n","import React, { useState } from 'react'\r\nimport \"./index.scss\"\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport axios from 'axios';\r\nimport {BASE_URL} from '../utils'\r\nimport ResetPassword from \"./ResetPassword\"\r\nimport { toast } from 'react-toastify';\r\nconst ForgetPassword = () => {\r\n\tconst [isReset, setIsReset] = useState(false)\r\n\tconst [token, setToken] = useState(\"\")\r\n\tconst Schema = Yup.object().shape({\r\n\t\temail: Yup.string()        \r\n\t\t   .email('Invalid email address.')\r\n\t\t   .required(\"The field is mandatory.\").nullable(),\r\n\t});\r\n\tconst handleSubmit = (values) => {\r\n\t\taxios.get(BASE_URL + \"auth/resetpassword\", {\r\n\t\t\tparams: {\r\n\t\t\t\temail: values.email\r\n\t\t\t}}\r\n\t\t)\r\n\t\t.then(async (res) => {\r\n\t\t\tsetToken(res.data.data.token)\r\n\t\t\thandleTokenVerification(res.data.data.token)\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\ttoast.error(\"Something went wrong\")\r\n\t\t})\r\n\t}\r\n\t \r\n\tconst handleTokenVerification =(data)=>{\r\n\t\taxios.get(BASE_URL + \"auth/resetpassword/\" + data)\r\n\t\t.then(() => {\r\n\t\t\tsetIsReset(true)\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t{isReset ? <ResetPassword token={token} /> :\r\n\t\t\t<div className=\"sign-up forget-password\">\r\n\t\t\t\t<div className=\"sign-up-container\">\r\n\t\t\t\t\t<h1>Forgot your password?</h1>\r\n\t\t\t\t\t<p className='forget-password-detail'>Enter the email associated with your account and we’ll send you instructions to reset your password.</p>\r\n\t\t\t\t\t<Formik \r\n\t\t\t\t\t\t\tinitialValues={{\r\n\t\t\t\t\t\t\t\temail: \"\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvalidationSchema={Schema}\r\n\t\t\t\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t{({ values, errors, touched, handleChange, handleBlur }) => (\r\n\t\t\t\t\t\t\t<Form className=\"signup-form\">\r\n\t\t\t\t\t\t\t\t<div className=\"input-field-container\">\r\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"email\">Email address</label>\r\n\t\t\t\t\t\t\t\t\t<Field \r\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\t\tclassName={\"input-field\" + (errors.email && touched.email && errors.email ? \" validationErrorInput\" : \"\")}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your full email\" \r\n\t\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur} \r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange} \r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<span className=\"validationError\">{errors.email && touched.email && errors.email}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<button className=\"btn\" type=\"submit\">Submit</button>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Formik>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default ForgetPassword\r\n","import LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\n\r\nconst JobItem = ({\r\n\tjob,\r\n\thandleApplicationClick\r\n}) => {\r\n\treturn (\r\n\t\t<div className=\"job-container\">\r\n\t\t\t<p className=\"job-title\">{job.title}</p>\r\n\t\t\t<p className=\"job-description\">{job.description}</p>\r\n\t\t\t<div className=\"location-btn-container\">\r\n\t\t\t\t<div className=\"location-container\">\r\n\t\t\t\t\t<LocationOnOutlinedIcon className=\"location-icon\"/>\r\n\t\t\t\t\t<p>{job.location}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"view-app-btn\" onClick={() => handleApplicationClick(job.id)}>View Applications</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default JobItem\r\n","import CloseIcon from '@material-ui/icons/Close';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport { useEffect, useState } from 'react';\r\nimport {AUTH_TOKEN, BASE_URL} from '../utils'\r\nimport axios from 'axios';\r\nconst ApplicationModal = ({\r\n\tappId,\r\n\tclose\r\n}) => {\r\n\tconst [applications, setApplications] = useState([])\r\n\tuseEffect((appId) => {\r\n\t\taxios.get(`${BASE_URL}recruiters/jobs/${appId}/candidates`, {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Authorization\": AUTH_TOKEN()\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then((res) => {\r\n\t\t\tif(res.data.data){\r\n\t\t\t\tsetApplications(res.data.data)\r\n\t\t\t}\r\n\t\t})\r\n\t}, [])\r\n\treturn (\r\n\t\t<div className=\"modal\">\r\n\t\t\t<div className=\"modal-container\">\r\n\t\t\t\t<div className=\"header\">\r\n\t\t\t\t\t<h2>Applicants for this job</h2>\r\n\t\t\t\t\t<CloseIcon className=\"close-icon\" onClick={close}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\"application-count\">{applications ? `Total ${applications.length} applications` : \"0 applications\"}</p>\r\n\t\t\t\t<div className={\"application-container\" + (applications.length ? \" application-container-with-application\" : \" application-container-no-application\")}>\r\n\t\t\t\t\t{applications.length ? \r\n\t\t\t\t\t\t<div className=\"application-grid\">\r\n\t\t\t\t\t\t\t{applications.map((item) => \r\n\t\t\t\t\t\t\t\t<Applications data={item} />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"no-application\">\r\n\t\t\t\t\t\t\t<AssignmentIndIcon className=\"no-application-icon\" />\r\n\t\t\t\t\t\t\t<p>No applications available!</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst Applications = ({\r\n\tdata\r\n}) => {\r\n\tconst capitalize = (word) => {\r\n\t\treturn word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\t  }\r\n\treturn (\r\n\t\t<div className=\"application\">\r\n\t\t\t<div className=\"profile\">\r\n\t\t\t\t<div className=\"profile-pic\">\r\n\t\t\t\t\t{data.name.charAt(0).toUpperCase()}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"user-info\">\r\n\t\t\t\t\t<p className=\"name\">\r\n\t\t\t\t\t\t{capitalize(data.name)}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p className=\"email\">\r\n\t\t\t\t\t\t{data.email}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"skills-container\">\r\n\t\t\t\t<h2>Skills</h2>\r\n\t\t\t\t<p>{data.skills}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n\r\nexport default ApplicationModal\r\n","import React from 'react';\r\n\r\nconst Pagination = ({ \r\n\tjobPerPage, \r\n\ttotalJobs, \r\n\tpaginate,\r\n\tcurrentPage\r\n}) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalJobs / jobPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ul className='pagination'>\r\n        {pageNumbers.map(number => (\r\n          <li onClick={() => paginate(number)} key={number} className={'page-item' + (currentPage === number ? \" selected-page\" : \"\")}>\r\n              {number}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, { useEffect, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport \"./index.scss\"\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport axios from 'axios';\r\nimport { AUTH_TOKEN, BASE_URL } from '../utils';\r\nimport JobItem from './JobItem';\r\nimport ApplicationModal from './ApplicationModal';\r\nimport { toast } from 'react-toastify';\r\nimport Pagination from \"../utils/Pagination\"\r\n\r\nconst PostJob = () => {\r\n\tconst history = useHistory();\r\n\tconst [jobList, setJobList] = useState([])\r\n\tconst [openModal, setOpenModal] = useState(false)\r\n\tconst [appId, setAppId] = useState(\"\")\r\n\tconst [loader, setLoader] = useState(false);\r\n\tconst [currentPage, setCurrentPage] = useState(1);\r\n\tconst [jobPerPage] = useState(20);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoader(true)\r\n\t\taxios.get(BASE_URL + \"recruiters/jobs\", {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Authorization\": AUTH_TOKEN()\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then((res)=>{\r\n\t\t\tres.data.data && setJobList(res.data.data.data)\r\n\t\t\tsetLoader(false)\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\ttoast.error(\"Something went wrong\")\r\n\t\t\tsetLoader(false)\r\n\t\t})\r\n\t}, [])\r\n\r\n\tconst indexOfLastJob = currentPage * jobPerPage;\r\n\tconst indexOfFirstJob = indexOfLastJob - jobPerPage;\r\n\tconst currentJobs = jobList.slice(indexOfFirstJob, indexOfLastJob);\r\n\r\n\tconst paginate = (pageNumber) => {\r\n\t\tsetCurrentPage(pageNumber)\r\n\t}\r\n\r\n\tconst handleApplicationClick = (id) => {\r\n\t\tsetAppId(id)\r\n\t\tsetOpenModal(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{loader ? \r\n\t\t\t\t<div>Loading...</div> :\r\n\t\t\t\t<div className=\"posted-job\">\r\n\t\t\t\t\t<div className=\"posted-job-container\">\r\n\t\t\t\t\t\t<Link to=\"/\" className=\"posted-job-home\">\r\n\t\t\t\t\t\t\t<HomeIcon style={{fontSize: \"1.2rem\"}}/>\r\n\t\t\t\t\t\t\t<span>Home</span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<h1>Jobs posted by you</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{jobList ? \r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<div className=\"poster-job-list\">\r\n\t\t\t\t\t\t\t\t{currentJobs.map((job) => \r\n\t\t\t\t\t\t\t\t\t<JobItem job={job} handleApplicationClick={handleApplicationClick} />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\t\tjobPerPage={jobPerPage}\r\n\t\t\t\t\t\t\t\ttotalJobs={jobList.length}\r\n\t\t\t\t\t\t\t\tpaginate={paginate}\r\n\t\t\t\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t: \r\n\t\t\t\t\t\t<div className=\"posted-job-container-2\">\r\n\t\t\t\t\t\t\t<DescriptionIcon style={{fontSize: \"6rem\"}}/>\r\n\t\t\t\t\t\t\t<p>Your posted jobs will show here!</p>\r\n\t\t\t\t\t\t\t<button className=\"btn\" onClick={()=>history.push(\"/post-new-job\")}>\r\n\t\t\t\t\t\t\t\tPost a Job\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{openModal &&\r\n\t\t\t\t\t<ApplicationModal \r\n\t\t\t\t\t\tappId={appId}\r\n\t\t\t\t\t\tclose={() => setOpenModal(false)}\r\n\t\t\t\t\t/>}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default PostJob\r\n","\r\nimport React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogin } from \"./component/utils\";\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            isLogin() ?\r\n                <Component {...props} />\r\n            : <Redirect to=\"/login\" />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import axios from 'axios';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport * as Yup from \"yup\";\r\nimport { BASE_URL, AUTH_TOKEN } from '../utils';\r\n\r\n\r\nconst PostNewJob = () => {\r\n\tconst Schema = Yup.object().shape({\r\n\t\ttitle: Yup.string()        \r\n\t\t   .required(\"The field is mandatory.\"),\r\n\t\tdescription: Yup.string()\r\n\t\t .required(\"The field is mandatory.\"),\r\n\t\tlocation: Yup.string()\r\n\t\t .required(\"The field is mandatory.\"),\r\n\t});\r\n\r\n\tconst history = useHistory()\r\n\r\n\tconst handleSubmit = (values) => {\r\n\t\taxios.post(BASE_URL + \"jobs/\", values, {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Authorization\": AUTH_TOKEN()\r\n\t\t\t},\r\n\t\t})\r\n\t\t.then((res) => {\r\n\t\t\ttoast.success(\"Job created successfully\")\r\n\t\t\thistory.push(\"/posted-job\")\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\ttoast.error(\"Something went wrong\")\r\n\t\t})\r\n\t}\r\n\tconsole.log(AUTH_TOKEN())\r\n\treturn (\r\n\t\t<div className=\"post-new-job\">\r\n\t\t\t<div className=\"sign-up-container\">\r\n\t\t\t\t<h1>Post a Job</h1>\r\n\t\t\t\t<Formik \r\n\t\t\t\t\tinitialValues={{\r\n\t\t\t\t\t\ttitle: \"\",\r\n\t\t\t\t\t\tdescription: \"\",\r\n\t\t\t\t\t\tlocation: \"\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tvalidationSchema={Schema}\r\n\t\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t\t>\r\n\t\t\t\t{({ values, errors, touched, handleChange, handleBlur }) => (\r\n\t\t\t\t\t<Form className=\"post-new-job-form\">\r\n\t\t\t\t\t\t<div className=\"input-field-container\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"title\">Job title*</label>\r\n\t\t\t\t\t\t\t<Field \r\n\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\tclassName={\"input-field\" + (errors.title && touched.title && errors.title ? \" validationErrorInput\" : \"\")}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter title title\" \r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tonBlur={handleBlur} \r\n\t\t\t\t\t\t\t\tonChange={handleChange} \r\n\t\t\t\t\t\t\t\tvalue={values.title}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<span className=\"validationError\">{errors.title && touched.title && errors.title}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"input-field-container\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"description\">Description*</label>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\tclassName={\"text-area-field\" + (errors.description && touched.description && errors.description ? \" validationErrorInput\" : \"\")}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter job description\" \r\n\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\tonBlur={handleBlur} \r\n\t\t\t\t\t\t\t\tonChange={handleChange} \r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<span className=\"validationError\">{errors.description && touched.description && errors.description}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"input-field-container\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"location\">Location*</label>\r\n\t\t\t\t\t\t\t<Field \r\n\t\t\t\t\t\t\t\tname=\"location\"\r\n\t\t\t\t\t\t\t\tclassName={\"input-field\" + (errors.location && touched.location && errors.location ? \" validationErrorInput\" : \"\")}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter location\" \r\n\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\tonBlur={handleBlur} \r\n\t\t\t\t\t\t\t\tonChange={handleChange} \r\n\t\t\t\t\t\t\t\tvalue={values.location}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<span className=\"validationError\">{errors.location && touched.location && errors.location}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button className=\"btn\" type=\"submit\">Post</button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PostNewJob\r\n","import './App.scss';\nimport Navbar from \"./component/Navbar\"\nimport Home from \"./component/Home\"\nimport SignUp from \"./component/SignUp\"\nimport Login from \"./component/Login\"\nimport ForgetPassword from \"./component/ForgetPassword\"\nimport PostedJob from \"./component/PostedJob\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport PrivateRoute from './PrivateRoute';\nimport PostNewJob from './component/PostedJob/PostNewJob';\nimport { useState } from 'react';\nimport { isLogin } from './component/utils';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(isLogin())\n  toast.configure({\n    position: toast.POSITION.BOTTOM_RIGHT,\n    hideProgressBar: true,\n    autoClose: 3000,\n});\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar \n          isLoggedIn={isLoggedIn} \n          setLoginFalse={() => setIsLoggedIn(false)}\n         />\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/sign-up\" exact>\n              <SignUp \n                setLoginTrue={() => setIsLoggedIn(true)}\n              />\n            </Route>\n            <Route path=\"/login\" exact>\n              <Login \n                setLoginTrue={() => setIsLoggedIn(true)}\n              />\n            </Route>\n            <Route path=\"/forget-password\" exact component={ForgetPassword} />\n            <PrivateRoute path=\"/posted-job\" exact component={PostedJob} />\n            <PrivateRoute  path=\"/page\"  component={SignUp}  exact  />\n            <PrivateRoute  path=\"/post-new-job\"  component={PostNewJob}  exact  />\n          </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}